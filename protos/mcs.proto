// GENERATE USING THIS COMMAND:  python -m grpc_tools.protoc -I ./protos --python_out=./ModuleContextStreaming --grpc_python_out=./ModuleContextStreaming ./protos/mcs.proto

syntax = "proto3";

import "google/protobuf/struct.proto"; // For structured arguments

package module_context;

// Service definition remains the same
service ModuleContext {
  rpc ListTools(ListToolsRequest) returns (ListToolsResult);
  rpc CallTool(ToolCallRequest) returns (stream ToolCallChunk);
}

// --- Request/Response Messages ---

message ListToolsRequest {}

message ToolDefinition {
  string name = 1;
  string description = 2;
}

message ListToolsResult {
  repeated ToolDefinition tools = 1;
}

message ToolCallRequest {
  string tool_name = 1;
  google.protobuf.Struct arguments = 2;
}

// --- The NEW Rich Content Chunk ---

message TextBlock {
  string text = 1;
}

message ImageBlock {
  // 'bytes' is far more efficient for binary data than a base64 string.
  bytes data = 1;
  // e.g., "image/png", "image/jpeg"
  string mime_type = 2;
}

message HTMLBlock {
  // A chunk of HTML content for the frontend to render.
  string html_content = 1;
}

// The server streams back chunks, each of which can be one of several types.
message ToolCallChunk {
  int32 sequence_id = 1;

  // The 'oneof' keyword ensures that only ONE of these fields can be set.
  // This is type-safe and avoids ambiguity.
  oneof content_block {
    TextBlock text = 2;
    ImageBlock image = 3;
    HTMLBlock html = 4;
  }
}